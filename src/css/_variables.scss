//ブレークポイント設定
$breakpoints: (
	"xs": "screen and (max-width: 374px)",
	"sm": "screen and (max-width: 767px)",
	"lg": "screen and (min-width: 768px)"
)!default;

//デフォルト値設定
$spBasicWidth: 768;
$font-default: "ヒラギノ角ゴ ProN W3", Hiragino Kaku Gothic ProN, Arial, Meiryo, BlinkMacSystemFont, "Helvetica Neue", "Noto Sans Japanese",sans-serif;
$font-size-default: 1.5rem;
$line-hight-default: 1.7;

//ミックスイン定義
@mixin xs() {
	@media #{map-get($breakpoints, "xs")} {
		@content;
	}
}
@mixin sm() {
	@media #{map-get($breakpoints, "sm")} {
		@content;
	}
}
@mixin tb() {
	@media #{map-get($breakpoints, "tb")} {
		@content;
	}
}
@mixin lg() {
	@media #{map-get($breakpoints, "lg")} {
		@content;
	}
}
@mixin svw($width) {
	width: ($width/$spBasicWidth*100vw);
}
@mixin svh($height) {
	height: ($height/$spBasicWidth*100vw);
}
@mixin svm($top, $bottom: 0, $side: 0) {
	@if $side == 'auto' {
		margin: ($top/$spBasicWidth*100vw) auto ($bottom/$spBasicWidth*100vw);
	} @else {
		margin: ($top/$spBasicWidth*100vw) ($side/$spBasicWidth*100vw) ($bottom/$spBasicWidth*100vw);
	}
}
@mixin svp($top, $bottom: 0, $side: 0) {
	padding: ($top/$spBasicWidth*100vw) ($side/$spBasicWidth*100vw) ($bottom/$spBasicWidth*100vw);
}
@mixin svt($top) {
	top: ($top/$spBasicWidth*100vw);
}
@mixin svb($bottom) {
	bottom: ($bottom/$spBasicWidth*100vw);
}
@mixin svl($left) {
	left: ($left/$spBasicWidth*100vw);
}
@mixin svr($right) {
	right: ($right/$spBasicWidth*100vw);
}

@function vw($val) {
	@return ($val / $spBasicWidth * 100vw);
}
